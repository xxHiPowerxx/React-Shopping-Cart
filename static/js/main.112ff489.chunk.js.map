{"version":3,"sources":["assets/js/accessibility.js","components/Navbar/ReactShoppingCartLogo/ReactShoppingCartLogo.jsx","components/Navbar/ProductsOnPageForm/ProductsOnPageForm.jsx","components/Navbar/ProductsInCart/ProductsInCart.jsx","assets/js/sizeHeaderPad.js","components/Navbar/Navbar.jsx","components/Counters/Counter/Counter.utils.js","components/Counters/Counter/Counter.jsx","components/Counters/Counters.jsx","App.js","serviceWorker.js","index.js"],"names":["handleFirstTab","n","keyCode","document","body","classList","add","window","removeEventListener","addEventListener","handleMouseDownOnce","remove","ReactShoppingCartLogo","state","className","icon","faReact","Component","ProductsOnPageForm","productInput","handleChange","event","console","log","target","value","setState","onSubmit","props","htmlFor","type","id","onChange","this","ProductsInCart","totalCounters","faShoppingCart","sizeHeaderPad","sizeHeaderPadTar","sizeHeaderPadParent","sizeHeaderPadRef","startingElem","targetClass","thisTag","includes","tagName","parentNode","$closest","documentElement","querySelectorAll","getComputedStyle","position","sizeHeaderPadRefHeight","getBoundingClientRect","height","style","paddingTop","InvertOrderComponent","condition","firstComponent","secondComponent","first","second","Fragment","NavBar","invertOrder","querySelector","sizeHeaderPadTarParent","getElementById","_nav","that","node","ResizeSensor","doSizeHeaderPad","clientWidth","ref","c","lastId","componentId","prefix","Counter","constructor","name","counter","productNum","src","alt","getBadgeClasses","formatValue","onClick","onIncrement","onDecrement","onDelete","classes","Counters","counters","onReset","map","key","App","numOfProductsValue","initiateCounters","handleIncrement","getThisCounter","index","handleDecrement","thisCounter","handleSubmit","input","preventDefault","numOfCounters","blur","handleReset","handleDelete","counterId","filter","num","i","push","constructCounters","indexOf","length","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uJAGA,SAASA,EAAeC,GACtB,IAAMA,EAAEC,UACLC,SAASC,KAAKC,UAAUC,IAAI,mBAC7BC,OAAOC,oBAAoB,UAAWR,GACtCO,OAAOE,iBAAiB,YAAaC,IAEzC,SAASA,IACPP,SAASC,KAAKC,UAAUM,OAAO,mBAC7BJ,OAAOC,oBAAoB,YAAaE,GACxCH,OAAOE,iBAAiB,UAAWT,GAEvCO,OAAOE,iBAAiB,UAAWT,I,uTCUpBY,G,iNAjBbC,MAAQ,G,wEAEN,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CACEA,UAAU,kDACVC,KAAMC,MAER,0BAAMF,UAAU,wBAAhB,UAEF,0BAAMA,UAAU,gCAAhB,sB,GAZ4BG,cC8BrBC,G,iNA/BbL,MAAQ,CACNM,aAAc,M,EAEhBC,aAAe,SAAAC,GACbC,QAAQC,IAAIF,EAAMG,OAAOC,OACzB,EAAKC,SAAS,CAAEP,aAAcE,EAAMG,U,wEAE5B,IAAD,OACP,OACE,0BACEV,UAAU,mBAEVa,SAAU,SAAAN,GAAK,OAAI,EAAKO,MAAMD,SAASN,EAAO,EAAKR,MAAMM,gBAEzD,2BAAOL,UAAU,yBAAyBe,QAAQ,gBAAlD,8BAGA,2BACEC,KAAK,SACLhB,UAAU,eACViB,GAAG,eACHC,SAAUC,KAAKb,eAEjB,4BAAQU,KAAK,SAAShB,UAAU,mBAAhC,e,GAxByBG,c,QCmBlBiB,G,uLAhBH,IACAC,EAAkBF,KAAKL,MAAvBO,cACR,OACE,yBAAKrB,UAAU,yBACb,0BAAMA,UAAU,oBAAhB,oBACA,yBAAKA,UAAU,6BACb,0BAAMA,UAAU,yDACbqB,GAEH,kBAAC,IAAD,CAAiBrB,UAAU,YAAYC,KAAMqB,Y,GAV1BnB,c,iBCgCdoB,EAxBO,SACpBC,EACAC,EACAC,GAEA,GAAIF,IACFC,EACEA,GArBW,SAACE,EAAcC,GAC9B,GAAID,EAAc,CAChBnB,QAAQC,IAAI,eAAgBkB,GAE5B,IADA,IAAIE,EAAUF,GACNE,EAAQ7B,UAAU8B,SAASF,IAET,SAApBC,EAAQE,SAGZF,EAAUA,EAAQG,WAEpB,OAAOH,GAWLI,CAAST,EAAkB,wBAC3BnC,SAAS6C,gBACXR,EACEA,GACAD,EAAoBU,iBAAiB,qBAGnCV,GAAuBC,GAC2B,UAAhDU,iBAAiBV,GAAkBW,UAAsB,CAC3D,IAAMC,EAAyBZ,EAAiBa,wBAC7CC,OACHhB,EAAiBiB,MAAMC,WAAaJ,EAAyB,OCtB/DK,G,MAAuB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAW9B,EAAY,EAAZA,MACjCD,EAA4BC,EAA5BD,SAAUQ,EAAkBP,EAAlBO,cACZwB,EAAiB,kBAAC,EAAD,CAAoBhC,SAAUA,IAC/CiC,EAAkB,kBAAC,EAAD,CAAgBzB,cAAeA,IAHF,EAI7BuB,EACpB,CAACC,EAAgBC,GACjB,CAACA,EAAiBD,GAN+B,mBAI9CE,EAJ8C,KAIvCC,EAJuC,KAQrD,OACE,kBAAC,IAAMC,SAAP,KACGF,EACAC,KA+CQE,E,2MAxBbnD,MAAQ,CACNoD,aAAa,G,iFAjBb,IAAM3B,EAAmBnC,SAAS+D,cAAc,qBAC9CC,EAAyBhE,SAASiE,eAAe,QACjD5B,EACEP,KAAKoC,MAAQlE,SAAS+D,cAAc,qBACxC7B,EAAcC,EAAkB6B,EAAwB3B,K,0CAIxD,IAAM8B,EAAOrC,KACPsC,EAAOtC,KAAKoC,KAClB,IAAIG,IAAaD,GAAM,WACrBD,EAAKG,kBACL,IAAMR,EAAcM,EAAKG,YAAc,IACvC,OAAOJ,EAAK5C,SAAS,CAAEuC,qB,+BAOjB,IAAD,OACCA,EAAgBhC,KAAKpB,MAArBoD,YAKR,OACE,yBACEnD,UAAU,yDACV6D,IAAK,SAAAC,GAAC,OAAK,EAAKP,KAAOO,IAEvB,yBAAK9D,UAAU,oCACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAsB4C,UAAWO,EAAarC,MAAOK,KAAKL,c,GAnC/CX,aC3BjB4D,EAAS,EAOEC,MALf,WAAqC,IAAhBC,EAAe,uDAAN,KAE5B,OADAF,IACM,GAAN,OAAUE,EAAV,YAAoBF,IC0DPG,G,mMAvDX/C,KAAK6C,YAAc7C,KAAKgD,YAAYC,KAAO,IAAMJ,M,+BAEzC,IAAD,OACDK,EAAUlD,KAAKL,MAAMuD,QACrBC,EAAa,YAAcD,EAAQpD,GACzC,OACE,yBAAKjB,UAAU,4BAA4BgE,YAAa7C,KAAK6C,aAC3D,wBAAIhE,UAAU,iBAAiBsE,GAC/B,yBACEtE,UAAU,gBACVuE,IAAK,wCAA0CF,EAAQpD,GACvDuD,IAAK,YAAcF,IAErB,yBAAKtE,UAAU,oBACb,yBAAKA,UAAU,sBACb,2BAAOA,UAAU,YAAjB,QACA,0BAAMA,UAAWmB,KAAKsD,kBAAoB,kBACvCtD,KAAKuD,gBAGV,4BACEC,QAAS,kBAAM,EAAK7D,MAAM8D,YAAYP,IACtCrE,UAAU,gDAFZ,aAMA,4BACE2E,QAAS,kBAAM,EAAK7D,MAAM+D,YAAYR,IACtCrE,UAAU,kDAFZ,aAMA,4BACE2E,QAAS,kBAAM,EAAK7D,MAAMgE,SAAST,EAAQpD,KAC3CjB,UAAU,4CAFZ,c,wCAYN,IAAI+E,EAAU,eAEd,OADAA,GAAwC,IAA7B5D,KAAKL,MAAMuD,QAAQ1D,MAAc,UAAY,Y,oCAI3C,IACLA,EAAUQ,KAAKL,MAAMuD,QAArB1D,MACR,OAAiB,IAAVA,EAAc,OAASA,M,GArDZR,cC8BP6E,G,uLA7BH,IAAD,EAOH7D,KAAKL,MALPmE,EAFK,EAELA,SACAC,EAHK,EAGLA,QACAJ,EAJK,EAILA,SACAF,EALK,EAKLA,YACAC,EANK,EAMLA,YAEF,OACE,yBAAK7E,UAAU,YACb,4BAAQ2E,QAASO,EAASlF,UAAU,8BAApC,SAGA,yBAAKA,UAAU,kBACZiF,EAASE,KAAI,SAAAd,GAAO,OACnB,kBAAC,EAAD,CACEe,IAAKf,EAAQpD,GACb6D,SAAUA,EACVF,YAAaA,EACbC,YAAaA,EACbR,QAASA,a,GArBAlE,cC+HRkF,G,kBAvFb,WAAYvE,GAAQ,IAAD,8BACjB,4CAAMA,KAvCRwE,mBAAqB,EAsCF,EAZnBvF,MAAQ,CAONuF,mBAAoB,EAAKA,mBACzBL,SAAU,EAAKM,iBAAiB,EAAKD,qBAIpB,EAiBnBE,gBAAkB,SAAAnB,GAChB7D,QAAQC,IAAI4D,GADe,MAEC,EAAKoB,eAAepB,GAAxCY,EAFmB,EAEnBA,SACRA,EAH2B,EAETS,OACF/E,QAChB,EAAKC,SAAS,CAAEqE,cArBC,EAwBnBU,gBAAkB,SAAAtB,GAAY,IAAD,EACC,EAAKoB,eAAepB,GAAxCY,EADmB,EACnBA,SACJW,EAAcX,EAFS,EACTS,OAGdE,EAAYjF,MAAQ,IACtBiF,EAAYjF,QACZ,EAAKC,SAAS,CAAEqE,eA9BD,EAiCnBY,aAAe,SAACtF,EAAOuF,GAErBvF,EAAMwF,iBAEN,IACMC,EADoBF,EAAMnF,MAI1BsE,EAAW,EAAKM,iBAAiBS,GAEvC,EAAKpF,SAAS,CAAEqE,aAChBa,EAAMG,QA5CW,EA8CnBC,YAAc,WACZ,IAAMjB,EAAW,EAAKM,mBACtB,EAAK3E,SAAS,CAAEqE,cAhDC,EAmDnBkB,aAAe,SAAAC,GASb,IAAMnB,EAAW,EAAKlF,MAAMkF,SAASoB,QAAO,SAAAvC,GAAC,OAAIA,EAAE7C,KAAOmF,KAC1D,EAAKxF,SAAS,CAAEqE,cA3DhBzE,QAAQC,IAAI,oBAAqB,EAAKK,OAFrB,E,+EApCDwF,EAAKZ,EAAO/E,GAE5B,IADA,IAAMsE,EAAW,GACRsB,EAAI,EAAGA,EAAID,EAAKC,IACvBtB,EAASuB,KAAK,CAAEvF,GAAIsF,EAAI,EAAG5F,MAAO,IAUpC,OAAOsE,I,uCAEQe,GACfA,EAAgBA,GAAgC7E,KAAKmE,mBACrD,IAAML,EAAW9D,KAAKsF,kBAAkBT,GAKxC,OAJAf,EAASE,KAAI,SAAArB,GAEX,OADAA,EAAEnD,MAAQ,EACHmD,KAEFmB,M,yDAqBPzE,QAAQC,IAAI,mB,qCAGC4D,GACb,IAAMY,EAAQ,YAAO9D,KAAKpB,MAAMkF,UAC1BS,EAAQT,EAASyB,QAAQrC,GAE/B,OADAY,EAASS,GAAT,eAAuBrB,GAChB,CAAEY,WAAUS,W,+BAqDnB,OAFAlF,QAAQC,IAAI,kBAGV,kBAAC,IAAMwC,SAAP,KACE,kBAAC,EAAD,CACE5B,cAAeF,KAAKpB,MAAMkF,SAASoB,QAAO,SAAAvC,GAAC,OAAIA,EAAEnD,MAAQ,KAAGgG,OAC5D9F,SAAUM,KAAK0E,eAEjB,0BAAM7F,UAAU,8BACd,kBAAC,EAAD,CACEiF,SAAU9D,KAAKpB,MAAMkF,SACrBC,QAAS/D,KAAK+E,YACdtB,YAAazD,KAAKqE,gBAClBX,YAAa1D,KAAKwE,gBAClBb,SAAU3D,KAAKgF,qB,GAtHThG,cCMEyG,QACW,cAA7BnH,OAAOoH,SAASC,UAEe,UAA7BrH,OAAOoH,SAASC,UAEhBrH,OAAOoH,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAAS5H,SAASiE,eAAe,SD4H3C,kBAAmB4D,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.112ff489.chunk.js","sourcesContent":["/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-sequences */\r\n//  Accessibility Adds .user-is-tabbing on body on tab   //\r\nfunction handleFirstTab(n) {\r\n  9 === n.keyCode &&\r\n    (document.body.classList.add(\"user-is-tabbing\"),\r\n    window.removeEventListener(\"keydown\", handleFirstTab),\r\n    window.addEventListener(\"mousedown\", handleMouseDownOnce));\r\n}\r\nfunction handleMouseDownOnce() {\r\n  document.body.classList.remove(\"user-is-tabbing\"),\r\n    window.removeEventListener(\"mousedown\", handleMouseDownOnce),\r\n    window.addEventListener(\"keydown\", handleFirstTab);\r\n}\r\nwindow.addEventListener(\"keydown\", handleFirstTab);\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faReact } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport \"./ReactShoppingCartLogo.scss\";\r\n\r\nclass ReactShoppingCartLogo extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"site-logo\">\r\n        <div className=\"react-logo\">\r\n          <FontAwesomeIcon\r\n            className=\"react-shopping-cart-logo site-logo-icon fa-spin\"\r\n            icon={faReact}\r\n          />\r\n          <span className=\"site-logo-text-react\">React</span>\r\n        </div>\r\n        <span className=\"site-logo-text-shopping-cart\">Shopping-Cart</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactShoppingCartLogo;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./ProductsOnPageForm.scss\";\r\n\r\nclass ProductsOnPageForm extends Component {\r\n  state = {\r\n    productInput: null\r\n  };\r\n  handleChange = event => {\r\n    console.log(event.target.value);\r\n    this.setState({ productInput: event.target });\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"products-on-page\"\r\n        // onSubmit={() => this.props.onSubmit(this.state.productInputValue)}\r\n        onSubmit={event => this.props.onSubmit(event, this.state.productInput)}\r\n      >\r\n        <label className=\"form-label input-label\" htmlFor=\"productInput\">\r\n          Number of Products on Page\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          id=\"productInput\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsOnPageForm;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./ProductsInCart.scss\";\r\n\r\nclass ProductsInCart extends Component {\r\n  render() {\r\n    const { totalCounters } = this.props;\r\n    return (\r\n      <div className=\"ctnr-products-in-cart\">\r\n        <span className=\"products-in-cart\">Products In Cart</span>\r\n        <div className=\"ctnr-products-in-cart-qty\">\r\n          <span className=\"products-in-cart-qty badge badge-pill badge-secondary\">\r\n            {totalCounters}\r\n          </span>\r\n          <FontAwesomeIcon className=\"cart-icon\" icon={faShoppingCart} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsInCart;\r\n","const $closest = (startingElem, targetClass) => {\r\n  if (startingElem) {\r\n    console.log(\"startingElem\", startingElem);\r\n    let thisTag = startingElem;\r\n    while (!thisTag.className.includes(targetClass)) {\r\n      // uppercase in HTML, lower in XML\r\n      if (thisTag.tagName === \"html\") {\r\n        break;\r\n      }\r\n      thisTag = thisTag.parentNode;\r\n    }\r\n    return thisTag;\r\n  }\r\n};\r\nconst sizeHeaderPad = (\r\n  sizeHeaderPadTar,\r\n  sizeHeaderPadParent,\r\n  sizeHeaderPadRef\r\n) => {\r\n  if (sizeHeaderPadTar) {\r\n    sizeHeaderPadParent =\r\n      sizeHeaderPadParent ||\r\n      $closest(sizeHeaderPadTar, \"sizeHeaderPadParent\") ||\r\n      document.documentElement;\r\n    sizeHeaderPadRef =\r\n      sizeHeaderPadRef ||\r\n      sizeHeaderPadParent.querySelectorAll(\".sizeHeaderPadRef\");\r\n    // Only continue if we've found all three elements.\r\n\r\n    if (sizeHeaderPadParent && sizeHeaderPadRef) {\r\n      if (getComputedStyle(sizeHeaderPadRef).position === \"fixed\") {\r\n        const sizeHeaderPadRefHeight = sizeHeaderPadRef.getBoundingClientRect()\r\n          .height;\r\n        sizeHeaderPadTar.style.paddingTop = sizeHeaderPadRefHeight + \"px\";\r\n      }\r\n    }\r\n  }\r\n};\r\nexport default sizeHeaderPad;\r\n","import React, { Component } from \"react\";\r\nimport ReactShoppingCartLogo from \"./ReactShoppingCartLogo/ReactShoppingCartLogo\";\r\nimport ProductsOnPageForm from \"./ProductsOnPageForm/ProductsOnPageForm\";\r\nimport ProductsInCart from \"./ProductsInCart/ProductsInCart\";\r\nimport ResizeSensor from \"css-element-queries/src/ResizeSensor\";\r\nimport sizeHeaderPad from \"../../assets/js/sizeHeaderPad\";\r\n\r\nimport \"./Navbar.scss\";\r\n\r\n// Stateless Functional Component No Longer\r\n\r\nconst InvertOrderComponent = ({ condition, props }) => {\r\n  const { onSubmit, totalCounters } = props;\r\n  const firstComponent = <ProductsOnPageForm onSubmit={onSubmit} />;\r\n  const secondComponent = <ProductsInCart totalCounters={totalCounters} />;\r\n  const [first, second] = condition\r\n    ? [firstComponent, secondComponent]\r\n    : [secondComponent, firstComponent];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {first}\r\n      {second}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nclass NavBar extends Component {\r\n  doSizeHeaderPad() {\r\n    const sizeHeaderPadTar = document.querySelector(\".sizeHeaderPadTar\"),\r\n      sizeHeaderPadTarParent = document.getElementById(\"root\"),\r\n      sizeHeaderPadRef =\r\n        this._nav || document.querySelector(\".sizeHeaderPadRef\");\r\n    sizeHeaderPad(sizeHeaderPadTar, sizeHeaderPadTarParent, sizeHeaderPadRef);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const that = this;\r\n    const node = this._nav;\r\n    new ResizeSensor(node, function() {\r\n      that.doSizeHeaderPad();\r\n      const invertOrder = node.clientWidth > 576;\r\n      return that.setState({ invertOrder });\r\n    });\r\n  }\r\n  state = {\r\n    invertOrder: false\r\n  };\r\n\r\n  render() {\r\n    const { invertOrder } = this.state;\r\n    // const { onSubmit, totalCounters } = this.props;\r\n\r\n    // ref={c => (this._nav = c)} Below refers to this Nav Element created by the <Navbar /> Component\r\n    // This way we don't need to import ReactDOM in order to use ReactDOM.findDOMNode(this); yay efficiency.\r\n    return (\r\n      <nav\r\n        className=\"navbar navbar-dark bg-dark text-light sizeHeaderPadRef\"\r\n        ref={c => (this._nav = c)}\r\n      >\r\n        <div className=\"container container-navbar-inner\">\r\n          <ReactShoppingCartLogo />\r\n          <InvertOrderComponent condition={invertOrder} props={this.props} />\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","let lastId = 0;\r\n\r\nfunction componentId(prefix = \"id\") {\r\n  lastId++;\r\n  return `${prefix}-${lastId}`;\r\n}\r\n\r\nexport default componentId;\r\n","import React, { Component } from \"react\";\r\nimport componentId from \"./Counter.utils\";\r\n\r\nimport \"./Counter.scss\";\r\n\r\nclass Counter extends Component {\r\n  componentWillMount() {\r\n    this.componentId = this.constructor.name + \"-\" + componentId();\r\n  }\r\n  render() {\r\n    const counter = this.props.counter;\r\n    const productNum = \"Product #\" + counter.id;\r\n    return (\r\n      <div className=\"counter smooth-transition\" componentId={this.componentId}>\r\n        <h4 className=\"counter-title\">{productNum}</h4>\r\n        <img\r\n          className=\"counter-image\"\r\n          src={\"https://picsum.photos/309/174?random=\" + counter.id}\r\n          alt={\"image of \" + productNum}\r\n        />\r\n        <div className=\"counter-controls\">\r\n          <div className=\"ctnr-counter-value\">\r\n            <small className=\"quantity\">Qty.</small>\r\n            <span className={this.getBadgeClasses() + \" counter-value\"}>\r\n              {this.formatValue()}\r\n            </span>\r\n          </div>\r\n          <button\r\n            onClick={() => this.props.onIncrement(counter)}\r\n            className=\"btn btn-increment-counter btn-success btn-sm\"\r\n          >\r\n            Increment\r\n          </button>\r\n          <button\r\n            onClick={() => this.props.onDecrement(counter)}\r\n            className=\"btn btn-decrement-counter btn-secondary btn-sm\"\r\n          >\r\n            Decrement\r\n          </button>\r\n          <button\r\n            onClick={() => this.props.onDelete(counter.id)}\r\n            className=\"btn btn-delete-counter btn-danger btn-sm\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatValue() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./Counter/Counter\";\r\n\r\nimport \"./Counters.scss\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    const {\r\n      counters,\r\n      onReset,\r\n      onDelete,\r\n      onIncrement,\r\n      onDecrement\r\n    } = this.props;\r\n    return (\r\n      <div className=\"counters\">\r\n        <button onClick={onReset} className=\"btn btn-primary btn-sm m-2\">\r\n          Reset\r\n        </button>\r\n        <div className=\"counters-inner\">\r\n          {counters.map(counter => (\r\n            <Counter\r\n              key={counter.id}\r\n              onDelete={onDelete}\r\n              onIncrement={onIncrement}\r\n              onDecrement={onDecrement}\r\n              counter={counter}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/Navbar/Navbar\";\r\nimport Counters from \"./components/Counters/Counters\";\r\n\r\nimport \"./assets/sass/App.scss\";\r\n\r\nclass App extends Component {\r\n  numOfProductsValue = 5;\r\n\r\n  constructCounters(num, index, value) {\r\n    const counters = [];\r\n    for (let i = 0; i < num; i++) {\r\n      counters.push({ id: i + 1, value: 0 });\r\n    }\r\n    // function setCountersValue(index, value) {\r\n    //   if (index && value) {\r\n    //     return (counters[index].value = value);\r\n    //   } else {\r\n    //     return (value = 0);\r\n    //   }\r\n    // }\r\n    // setCountersValue(index, value);\r\n    return counters;\r\n  }\r\n  initiateCounters(numOfCounters) {\r\n    numOfCounters = numOfCounters ? numOfCounters : this.numOfProductsValue;\r\n    const counters = this.constructCounters(numOfCounters);\r\n    counters.map(c => {\r\n      c.value = 0;\r\n      return c;\r\n    });\r\n    return counters;\r\n  }\r\n  state = {\r\n    // counters: [\r\n    //   { id: 1, value: 0 },\r\n    //   { id: 1, value: 0 },\r\n    //   { id: 1, value: 0 },\r\n    //   { id: 1, value: 0 }\r\n    // ]\r\n    numOfProductsValue: this.numOfProductsValue,\r\n    counters: this.initiateCounters(this.numOfProductsValue)\r\n    // counters: this.constructCounters(5, 2, 4)\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"App - Constructor\", this.props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Ajax Call\r\n    console.log(\"App - Mounted\");\r\n  }\r\n\r\n  getThisCounter(counter) {\r\n    const counters = [...this.state.counters];\r\n    const index = counters.indexOf(counter);\r\n    counters[index] = { ...counter };\r\n    return { counters, index };\r\n  }\r\n\r\n  handleIncrement = counter => {\r\n    console.log(counter);\r\n    const { counters, index } = this.getThisCounter(counter);\r\n    counters[index].value++;\r\n    this.setState({ counters });\r\n  };\r\n\r\n  handleDecrement = counter => {\r\n    const { counters, index } = this.getThisCounter(counter);\r\n    let thisCounter = counters[index];\r\n\r\n    if (thisCounter.value > 0) {\r\n      thisCounter.value--;\r\n      this.setState({ counters });\r\n    }\r\n  };\r\n  handleSubmit = (event, input) => {\r\n    // console.log(\"event\", event);\r\n    event.preventDefault();\r\n\r\n    const productInputValue = input.value;\r\n    const numOfCounters = productInputValue;\r\n    // console.log(\"numOfCounters\", numOfCounters);\r\n\r\n    const counters = this.initiateCounters(numOfCounters);\r\n    // console.log(\"counters\", counters);\r\n    this.setState({ counters });\r\n    input.blur();\r\n  };\r\n  handleReset = () => {\r\n    const counters = this.initiateCounters();\r\n    this.setState({ counters });\r\n  };\r\n\r\n  handleDelete = counterId => {\r\n    // console.log(\"Event Handler Called\", counterId);\r\n    // function filterId(c) {\r\n    //   return c.id !== counterId;\r\n    // }\r\n    // const counters = this.state.counters.filter(filterId);\r\n    // this.setState({ counters: counters });\r\n\r\n    // Simplified Version of the Above Code\r\n    const counters = this.state.counters.filter(c => c.id !== counterId);\r\n    this.setState({ counters });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"App - Rendered\");\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar\r\n          totalCounters={this.state.counters.filter(c => c.value > 0).length}\r\n          onSubmit={this.handleSubmit}\r\n        />\r\n        <main className=\"container sizeHeaderPadTar\">\r\n          <Counters\r\n            counters={this.state.counters}\r\n            onReset={this.handleReset}\r\n            onIncrement={this.handleIncrement}\r\n            onDecrement={this.handleDecrement}\r\n            onDelete={this.handleDelete}\r\n          />\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/sass/index.scss\";\nimport \"./assets/js/accessibility\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}